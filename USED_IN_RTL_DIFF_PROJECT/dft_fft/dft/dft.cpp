#include "dft.h"


void dft::entry()
{ 
    // N = 16, put sin and cos coefficients in table, cos[k][n] = cos(2*pi*k*n/16)
    sc_fixed<18,2,SC_RND, SC_SAT> cos16[16][16] = {1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
1.0,0.9238795325112867,0.7071067811865476,0.38268343236508984,0,-0.3826834323650897,-0.7071067811865475,-0.9238795325112867,-1.0,-0.9238795325112868,-0.7071067811865477,-0.38268343236509034,0,0.38268343236509,0.7071067811865474,0.9238795325112865,
1.0,0.7071067811865476,0,-0.7071067811865475,-1.0,-0.7071067811865477,0,0.7071067811865474,1.0,0.7071067811865477,0,-0.7071067811865467,-1.0,-0.7071067811865471,0,0.7071067811865466,
1.0,0.38268343236508984,-0.7071067811865475,-0.9238795325112868,0,0.9238795325112865,0.7071067811865477,-0.3826834323650899,-1.0,-0.38268343236509056,0.7071067811865466,0.9238795325112867,0,-0.9238795325112864,-0.7071067811865474,0.38268343236508956,
1.0,0,-1.0,0,1.0,0,-1.0,0,1.0,0,-1.0,0,1.0,0,-1.0,0,
1.0,-0.3826834323650897,-0.7071067811865477,0.9238795325112865,0,-0.9238795325112867,0.7071067811865466,0.38268343236509067,-1.0,0.38268343236508956,0.7071067811865475,-0.923879532511287,0,0.9238795325112876,-0.7071067811865461,-0.3826834323650912,
1.0,-0.7071067811865475,0,0.7071067811865477,-1.0,0.7071067811865466,0,-0.7071067811865474,1.0,-0.7071067811865464,0,0.7071067811865476,-1.0,0.707106781186546,0,-0.7071067811865479,
1.0,-0.9238795325112867,0.7071067811865474,-0.3826834323650899,0,0.38268343236509067,-0.7071067811865474,0.9238795325112875,-1.0,0.9238795325112868,-0.7071067811865461,0.3826834323650891,0,-0.38268343236509145,0.7071067811865505,-0.9238795325112865,
1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,
1.0,-0.9238795325112868,0.7071067811865477,-0.38268343236509056,0,0.38268343236508956,-0.7071067811865464,0.9238795325112868,-1.0,0.9238795325112877,-0.7071067811865479,0.3826834323650883,0,-0.3826834323650885,0.707106781186548,-0.9238795325112851,
1.0,-0.7071067811865477,0,0.7071067811865466,-1.0,0.7071067811865475,0,-0.7071067811865461,1.0,-0.7071067811865479,0,0.7071067811865482,-1.0,0.7071067811865508,0,-0.7071067811865452,
1.0,-0.38268343236509034,-0.7071067811865467,0.9238795325112874,0,-0.9238795325112856,0.7071067811865501,0.3826834323650858,-1.0,0.3826834323650949,0.7071067811865432,-0.9238795325112893,0,0.9238795325112837,-0.7071067811865536,-0.3826834323650813,
1.0,0,-1.0,0,1.0,0,-1.0,0,1.0,0,-1.0,0,1.0,0,-1.0,0,
1.0,0.38268343236509,-0.7071067811865471,-0.9238795325112871,0,0.9238795325112863,0.7071067811865486,-0.3826834323650849,-1.0,-0.3826834323650885,0.7071067811865458,0.9238795325112892,0,-0.9238795325112868,-0.707106781186555,0.3826834323650831,
1.0,0.7071067811865474,0,-0.7071067811865474,-1.0,-0.7071067811865461,0,0.7071067811865505,1.0,0.707106781186548,0,-0.7071067811865486,-1.0,-0.7071067811865449,0,0.7071067811865467,
1.0,0.9238795325112865,0.7071067811865466,0.3826834323650863,0,-0.3826834323650912,-0.7071067811865529,-0.9238795325112893,-1.0,-0.9238795325112851,-0.7071067811865452,-0.3826834323650813,0,0.3826834323650962,0.7071067811865567,0.9238795325112886};

    sc_fixed<18,2,SC_RND,SC_SAT> sin16[16][16] = {0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
0.0,0.3826834323650898,0.7071067811865475,0.9238795325112867,1.0,0.9238795325112867,0.7071067811865476,0.3826834323650899,0,-0.38268343236508967,-0.7071067811865475,-0.9238795325112865,-1.0,-0.9238795325112866,-0.7071067811865477,-0.3826834323650904,
0.0,0.7071067811865475,1.0,0.7071067811865476,0,-0.7071067811865475,-1.0,-0.7071067811865477,0,0.7071067811865474,1.0,0.7071067811865483,0,-0.7071067811865479,-1.0,-0.7071067811865485,
0.0,0.9238795325112867,0.7071067811865476,-0.38268343236508967,-1.0,-0.3826834323650904,0.7071067811865474,0.9238795325112867,0,-0.9238795325112864,-0.7071067811865485,0.3826834323650897,1.0,0.3826834323650907,-0.7071067811865477,-0.9238795325112868,
0.0,1.0,0,-1.0,0,1.0,0,-1.0,0,1.0,0,-1.0,0,1.0,0,-1.0,
0.0,0.9238795325112867,-0.7071067811865475,-0.3826834323650904,1.0,-0.38268343236508984,-0.7071067811865485,0.9238795325112864,0,-0.9238795325112868,0.7071067811865476,0.38268343236508934,-1.0,0.3826834323650876,0.7071067811865489,-0.9238795325112862,
0.0,0.7071067811865476,-1.0,0.7071067811865474,0,-0.7071067811865485,1.0,-0.7071067811865477,0,0.7071067811865487,-1.0,0.7071067811865475,0,-0.707106781186549,1.0,-0.7071067811865471,
0.0,0.3826834323650899,-0.7071067811865477,0.9238795325112867,-1.0,0.9238795325112864,-0.7071067811865477,0.38268343236508784,0,-0.38268343236508945,0.7071067811865489,-0.9238795325112871,1.0,-0.9238795325112861,0.7071067811865446,-0.38268343236509034,
0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0.0,-0.38268343236508967,0.7071067811865474,-0.9238795325112864,1.0,-0.9238795325112868,0.7071067811865487,-0.38268343236508945,0,0.3826834323650874,-0.7071067811865471,0.9238795325112874,-1.0,0.9238795325112873,-0.707106781186547,0.3826834323650937,
0.0,-0.7071067811865475,1.0,-0.7071067811865485,0,0.7071067811865476,-1.0,0.7071067811865489,0,-0.7071067811865471,1.0,-0.7071067811865468,0,0.7071067811865442,-1.0,0.7071067811865498,
0.0,-0.9238795325112865,0.7071067811865483,0.38268343236508806,-1.0,0.3826834323650926,0.7071067811865449,-0.9238795325112884,0,0.9238795325112846,-0.7071067811865519,-0.38268343236508356,1.0,-0.3826834323650971,-0.7071067811865415,0.9238795325112903,
0.0,-1.0,0,1.0,0,-1.0,0,1.0,0,-1.0,0,1.0,0,-1.0,0,1.0,
0.0,-0.9238795325112866,-0.7071067811865479,0.3826834323650891,1.0,0.3826834323650909,-0.7071067811865465,-0.9238795325112887,0,0.9238795325112873,0.7071067811865492,-0.382683432365084,-1.0,-0.38268343236508945,0.70710678118654,0.9238795325112895,
0.0,-0.7071067811865477,-1.0,-0.7071067811865477,0,0.7071067811865489,1.0,0.7071067811865446,0,-0.707106781186547,-1.0,-0.7071067811865465,0,0.7071067811865501,1.0,0.7071067811865483,
0.0,-0.3826834323650904,-0.7071067811865485,-0.9238795325112882,-1.0,-0.9238795325112862,-0.7071067811865421,-0.3826834323650838,0,0.3826834323650937,0.7071067811865498,0.9238795325112903,1.0,0.9238795325112841,0.7071067811865384,0.38268343236508534};

    sc_fixed<32,16, SC_RND, SC_SAT> sample[16][2];
    static sc_fixed<32,16, SC_RND, SC_SAT> sample_out[16][2];
    unsigned int index, n,k,i;

    // Reset state -- should be executable in a single clock cycle
    for (unsigned int i = 0; i < 16; i++) {
        for(unsigned h=0; h <2; h++){
            sample[i][h] = 0;
        }
    }
    index = 0;

    wait();

    // Main computational loop
    while(true)
    { 

        data_req.write(false);
        data_ready.write(false);


        //Reading in the Samples
        for( index = 0; index < 16; index++ )
        {
            data_req.write(true);
            do {
                wait(); 
            } while (data_valid.read() == true);

            sample[index][0] = in_real.read();
            sample[index][1] = in_imag.read();

            data_req.write(false);
            wait();
        }



        //Size of DFT, N = 2**M    
        unsigned int N = 16 ;   
        //float theta;   // Note: float is non-synthesizble as indicated in the SystemC synthesizable subset draft 1.3
       
        /* Cyber unroll_times = 4 */
        for( k=0; k<16; k++){
            for( n=0; n<16; n++){
                sample_out[k][0] += sample[n][0]*cos16[k][n] + sample[n][1]*sin16[k][n];
                sample_out[k][1] += -sample[n][0]*sin16[k][n] + sample[n][1]*cos16[k][n];
            }
        }
   

        //    cout << "Writing the transform values..." << endl;
        for( i=0;i < 16; i++)
        {

            out_real.write(sample_out[i][0]);
            out_imag.write(sample_out[i][1]);
            data_ready.write(true);


            do { 
                wait();
            } while ( !(data_ack.read() == true) );

            data_ready.write(false);
            wait();
        }

    }
}
